// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DODOBirth extends ethereum.Event {
  get params(): DODOBirth__Params {
    return new DODOBirth__Params(this);
  }
}

export class DODOBirth__Params {
  _event: DODOBirth;

  constructor(event: DODOBirth) {
    this._event = event;
  }

  get newBorn(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get baseToken(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quoteToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class OwnershipTransferPrepared extends ethereum.Event {
  get params(): OwnershipTransferPrepared__Params {
    return new OwnershipTransferPrepared__Params(this);
  }
}

export class OwnershipTransferPrepared__Params {
  _event: OwnershipTransferPrepared;

  constructor(event: OwnershipTransferPrepared) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DODOZoo extends ethereum.SmartContract {
  static bind(address: Address): DODOZoo {
    return new DODOZoo("DODOZoo", address);
  }

  _CLONE_FACTORY_(): Address {
    let result = super.call(
      "_CLONE_FACTORY_",
      "_CLONE_FACTORY_():(address)",
      []
    );

    return result[0].toAddress();
  }

  try__CLONE_FACTORY_(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_CLONE_FACTORY_",
      "_CLONE_FACTORY_():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _DEFAULT_SUPERVISOR_(): Address {
    let result = super.call(
      "_DEFAULT_SUPERVISOR_",
      "_DEFAULT_SUPERVISOR_():(address)",
      []
    );

    return result[0].toAddress();
  }

  try__DEFAULT_SUPERVISOR_(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "_DEFAULT_SUPERVISOR_",
      "_DEFAULT_SUPERVISOR_():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _DODO_LOGIC_(): Address {
    let result = super.call("_DODO_LOGIC_", "_DODO_LOGIC_():(address)", []);

    return result[0].toAddress();
  }

  try__DODO_LOGIC_(): ethereum.CallResult<Address> {
    let result = super.tryCall("_DODO_LOGIC_", "_DODO_LOGIC_():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _DODOs(param0: BigInt): Address {
    let result = super.call("_DODOs", "_DODOs(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try__DODOs(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("_DODOs", "_DODOs(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _NEW_OWNER_(): Address {
    let result = super.call("_NEW_OWNER_", "_NEW_OWNER_():(address)", []);

    return result[0].toAddress();
  }

  try__NEW_OWNER_(): ethereum.CallResult<Address> {
    let result = super.tryCall("_NEW_OWNER_", "_NEW_OWNER_():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  _OWNER_(): Address {
    let result = super.call("_OWNER_", "_OWNER_():(address)", []);

    return result[0].toAddress();
  }

  try__OWNER_(): ethereum.CallResult<Address> {
    let result = super.tryCall("_OWNER_", "_OWNER_():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  breedDODO(
    maintainer: Address,
    baseToken: Address,
    quoteToken: Address,
    oracle: Address,
    lpFeeRate: BigInt,
    mtFeeRate: BigInt,
    k: BigInt,
    gasPriceLimit: BigInt
  ): Address {
    let result = super.call(
      "breedDODO",
      "breedDODO(address,address,address,address,uint256,uint256,uint256,uint256):(address)",
      [
        ethereum.Value.fromAddress(maintainer),
        ethereum.Value.fromAddress(baseToken),
        ethereum.Value.fromAddress(quoteToken),
        ethereum.Value.fromAddress(oracle),
        ethereum.Value.fromUnsignedBigInt(lpFeeRate),
        ethereum.Value.fromUnsignedBigInt(mtFeeRate),
        ethereum.Value.fromUnsignedBigInt(k),
        ethereum.Value.fromUnsignedBigInt(gasPriceLimit)
      ]
    );

    return result[0].toAddress();
  }

  try_breedDODO(
    maintainer: Address,
    baseToken: Address,
    quoteToken: Address,
    oracle: Address,
    lpFeeRate: BigInt,
    mtFeeRate: BigInt,
    k: BigInt,
    gasPriceLimit: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "breedDODO",
      "breedDODO(address,address,address,address,uint256,uint256,uint256,uint256):(address)",
      [
        ethereum.Value.fromAddress(maintainer),
        ethereum.Value.fromAddress(baseToken),
        ethereum.Value.fromAddress(quoteToken),
        ethereum.Value.fromAddress(oracle),
        ethereum.Value.fromUnsignedBigInt(lpFeeRate),
        ethereum.Value.fromUnsignedBigInt(mtFeeRate),
        ethereum.Value.fromUnsignedBigInt(k),
        ethereum.Value.fromUnsignedBigInt(gasPriceLimit)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDODO(baseToken: Address, quoteToken: Address): Address {
    let result = super.call("getDODO", "getDODO(address,address):(address)", [
      ethereum.Value.fromAddress(baseToken),
      ethereum.Value.fromAddress(quoteToken)
    ]);

    return result[0].toAddress();
  }

  try_getDODO(
    baseToken: Address,
    quoteToken: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getDODO",
      "getDODO(address,address):(address)",
      [
        ethereum.Value.fromAddress(baseToken),
        ethereum.Value.fromAddress(quoteToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDODOs(): Array<Address> {
    let result = super.call("getDODOs", "getDODOs():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getDODOs(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getDODOs", "getDODOs():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  isDODORegistered(baseToken: Address, quoteToken: Address): boolean {
    let result = super.call(
      "isDODORegistered",
      "isDODORegistered(address,address):(bool)",
      [
        ethereum.Value.fromAddress(baseToken),
        ethereum.Value.fromAddress(quoteToken)
      ]
    );

    return result[0].toBoolean();
  }

  try_isDODORegistered(
    baseToken: Address,
    quoteToken: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isDODORegistered",
      "isDODORegistered(address,address):(bool)",
      [
        ethereum.Value.fromAddress(baseToken),
        ethereum.Value.fromAddress(quoteToken)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _dodoLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _cloneFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _defaultSupervisor(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddDODOCall extends ethereum.Call {
  get inputs(): AddDODOCall__Inputs {
    return new AddDODOCall__Inputs(this);
  }

  get outputs(): AddDODOCall__Outputs {
    return new AddDODOCall__Outputs(this);
  }
}

export class AddDODOCall__Inputs {
  _call: AddDODOCall;

  constructor(call: AddDODOCall) {
    this._call = call;
  }

  get dodo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddDODOCall__Outputs {
  _call: AddDODOCall;

  constructor(call: AddDODOCall) {
    this._call = call;
  }
}

export class BreedDODOCall extends ethereum.Call {
  get inputs(): BreedDODOCall__Inputs {
    return new BreedDODOCall__Inputs(this);
  }

  get outputs(): BreedDODOCall__Outputs {
    return new BreedDODOCall__Outputs(this);
  }
}

export class BreedDODOCall__Inputs {
  _call: BreedDODOCall;

  constructor(call: BreedDODOCall) {
    this._call = call;
  }

  get maintainer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get baseToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get quoteToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get oracle(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get lpFeeRate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get mtFeeRate(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get k(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get gasPriceLimit(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class BreedDODOCall__Outputs {
  _call: BreedDODOCall;

  constructor(call: BreedDODOCall) {
    this._call = call;
  }

  get newBornDODO(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ClaimOwnershipCall extends ethereum.Call {
  get inputs(): ClaimOwnershipCall__Inputs {
    return new ClaimOwnershipCall__Inputs(this);
  }

  get outputs(): ClaimOwnershipCall__Outputs {
    return new ClaimOwnershipCall__Outputs(this);
  }
}

export class ClaimOwnershipCall__Inputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class ClaimOwnershipCall__Outputs {
  _call: ClaimOwnershipCall;

  constructor(call: ClaimOwnershipCall) {
    this._call = call;
  }
}

export class RemoveDODOCall extends ethereum.Call {
  get inputs(): RemoveDODOCall__Inputs {
    return new RemoveDODOCall__Inputs(this);
  }

  get outputs(): RemoveDODOCall__Outputs {
    return new RemoveDODOCall__Outputs(this);
  }
}

export class RemoveDODOCall__Inputs {
  _call: RemoveDODOCall;

  constructor(call: RemoveDODOCall) {
    this._call = call;
  }

  get dodo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveDODOCall__Outputs {
  _call: RemoveDODOCall;

  constructor(call: RemoveDODOCall) {
    this._call = call;
  }
}

export class SetCloneFactoryCall extends ethereum.Call {
  get inputs(): SetCloneFactoryCall__Inputs {
    return new SetCloneFactoryCall__Inputs(this);
  }

  get outputs(): SetCloneFactoryCall__Outputs {
    return new SetCloneFactoryCall__Outputs(this);
  }
}

export class SetCloneFactoryCall__Inputs {
  _call: SetCloneFactoryCall;

  constructor(call: SetCloneFactoryCall) {
    this._call = call;
  }

  get _cloneFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCloneFactoryCall__Outputs {
  _call: SetCloneFactoryCall;

  constructor(call: SetCloneFactoryCall) {
    this._call = call;
  }
}

export class SetDODOLogicCall extends ethereum.Call {
  get inputs(): SetDODOLogicCall__Inputs {
    return new SetDODOLogicCall__Inputs(this);
  }

  get outputs(): SetDODOLogicCall__Outputs {
    return new SetDODOLogicCall__Outputs(this);
  }
}

export class SetDODOLogicCall__Inputs {
  _call: SetDODOLogicCall;

  constructor(call: SetDODOLogicCall) {
    this._call = call;
  }

  get _dodoLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDODOLogicCall__Outputs {
  _call: SetDODOLogicCall;

  constructor(call: SetDODOLogicCall) {
    this._call = call;
  }
}

export class SetDefaultSupervisorCall extends ethereum.Call {
  get inputs(): SetDefaultSupervisorCall__Inputs {
    return new SetDefaultSupervisorCall__Inputs(this);
  }

  get outputs(): SetDefaultSupervisorCall__Outputs {
    return new SetDefaultSupervisorCall__Outputs(this);
  }
}

export class SetDefaultSupervisorCall__Inputs {
  _call: SetDefaultSupervisorCall;

  constructor(call: SetDefaultSupervisorCall) {
    this._call = call;
  }

  get _defaultSupervisor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDefaultSupervisorCall__Outputs {
  _call: SetDefaultSupervisorCall;

  constructor(call: SetDefaultSupervisorCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
